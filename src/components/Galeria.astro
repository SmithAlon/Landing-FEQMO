---
import { getCollection } from 'astro:content';
const proyectos = await getCollection('proyectos');

// Render the content
const renderedContent = await Promise.all(
    proyectos.map(async (proyecto) => {
        const { Content } = await proyecto.render();
        return Content;
    })
);
---

<section class="flex flex-col mt-6 mb-6">
    <div class="flex flex-col items-center justify-center mb-6">
        <h2 class="font-bold text-3xl text-[#111111]">Galer√≠a de Proyectos</h2>
        <div class="px-36 bg-[#222222] py-0.5 w-fit mt-1 rounded-md"></div>
    </div>

    <div class="flex items-center justify-between w-full max-w-lg mx-auto">
        <button type="button" id="prevBtn" class="justify-center text-[#111111] text-xl font-semibold ml-2 hover:text-[#444444]">&lt;</button>
            <div class="w-full max-w-4xl mx-auto px-4">
                {proyectos.map((proyecto, index) => (
                    <div data-proyecto class={`transition-opacity duration-500 ease-in-out ${index === 0 ? 'opacity-100' : 'opacity-0 hidden'}`}>
                        <h2 class="text-[#111111] text-center text-2xl font-semibold">{proyecto.data.nombre}</h2>
                        <p class="text-center text-sm">{proyecto.data.ubicacion}</p>
                        <div class="relative w-full aspect-[3/2] mt-4">
                            <img 
                                src={proyecto.data.imagen} 
                                alt="imagen del proyecto" 
                                class="absolute w-full h-full object-cover shadow-xl rounded-lg"
                            />
                            <div class="absolute inset-0 flex items-center justify-center">
                                <div class="w-full h-full flex items-center justify-center">
                                    <span class="prose bg-[#E6E13B]/90 max-w-[80%] text-center text-base sm:text-sm md:text-md lg:text-lg font-light text-[#111111] px-0">
                                        {index < renderedContent.length && 
                                            (() => {
                                                const Content = renderedContent[index];
                                                return <Content />;
                                            })()
                                        }
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                ))}
            </div>
        <button type="button" id="nextBtn" class="text-[#111111] text-xl font-semibold mr-2 hover:text-[#444444]">&gt;</button>
    </div>
</section>

<script>
    let current = 0;
    const proyectos = document.querySelectorAll('[data-proyecto]');
    
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');

    function animateTransition(from: Element, to: Element) {
        from.classList.add('opacity-0');
        
        setTimeout(() => {
            from.classList.add('hidden');
            to.classList.remove('hidden');
            setTimeout(() => {
                to.classList.remove('opacity-0');
            }, 100);
        }, 300);
    }

    prevBtn?.addEventListener('click', () => {
        const oldProject = proyectos[current];
        current = (current + 1) % proyectos.length;
        animateTransition(oldProject, proyectos[current]);
    });
        
    nextBtn?.addEventListener('click', () => {
        const oldProject = proyectos[current];
        current = (current - 1 + proyectos.length) % proyectos.length;
        animateTransition(oldProject, proyectos[current]);
    });

    // Initial display is handled by template rendering
</script>